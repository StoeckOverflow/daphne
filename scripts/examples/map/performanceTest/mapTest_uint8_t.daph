/*
 * Copyright 2021 The DAPHNE Consortium
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 /*
Generate random Matrix
 */
X = as.matrix<ui8>(rand($matrix_size, $matrix_size, $minValue, $maxValue, 1.0, 42));
/*
Function Definitions
*/
def square(x: ui8) -> ui8 {return x^2;}
def cubic(x: ui8) -> ui8 {return x^3;}
def quartic(x: ui8) -> ui8 {return x^4;}
def quintic(x: ui8) -> ui8 {return x^5;}
def sextic(x: ui8) -> ui8 {return x^6;}
def septic(x: ui8) -> ui8 {return x^7;}
def octic(x: ui8) -> ui8 {return x^8;}
def nonic(x: ui8) -> ui8 {return x^9;}
def decic(x: ui8) -> ui8 {return x^10;}
def undecic(x: ui8) -> ui8 {return x^11;}
def duodecic(x: ui8) -> ui8 {return x^12;}
def tridecic(x: ui8) -> ui8 {return x^13;}
def tetradecic(x: ui8) -> ui8 {return x^14;}
def pentadecic(x: ui8) -> ui8 {return x^15;}
def hexadecic(x: ui8) -> ui8 {return x^16;}
def heptadecic(x: ui8) -> ui8 {return x^17;}

/*
Execute the function
*/

if($exponent == 2)
{
    map(X, square);
}
else if($exponent == 3)
{
    map(X, cubic);
}
else if($exponent == 4)
{
    map(X, quartic);
}
else if($exponent == 5)
{
    map(X, quintic);
}
else if($exponent == 6)
{
    map(X, sextic);
}
else if($exponent == 7)
{
    map(X, septic);
}
else if($exponent == 8)
{
    map(X, octic);
}
else if($exponent == 9)
{
    map(X, nonic);
}
else if($exponent == 10)
{
    map(X, decic);
}
else if($exponent == 11)
{
    map(X, undecic);
}
else if($exponent == 12)
{
    map(X, duodecic);
}
else if($exponent == 13)
{
    map(X, tridecic);
}
else if($exponent == 14)
{
    map(X, tetradecic);
}
else if($exponent == 15)
{
    map(X, pentadecic);
}
else if($exponent == 16)
{
    map(X, hexadecic);
}
else if($exponent == 17)
{
    map(X, heptadecic);
}